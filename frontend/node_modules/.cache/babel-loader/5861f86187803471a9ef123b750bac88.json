{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Documents\\\\aaf\\\\frontend\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport jwt from 'jsonwebtoken';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const history = useHistory();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'x-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      const user = jwt.decode(token);\n\n      if (!user) {\n        localStorage.removeItem('token');\n        history.replace('/login');\n      } else {\n        populateQuote();\n      }\n    }\n  }, []);\n\n  async function updateQuote(event) {\n    event.preventDefault();\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hoem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Dashboard, \"LplMk0xp4gApsYE42pcgGIRN3Iw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/aidan/Documents/aaf/frontend/src/Home.js"],"names":["React","jwt","useHistory","Dashboard","history","quote","setQuote","useState","tempQuote","setTempQuote","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","useEffect","token","user","decode","removeItem","replace","updateQuote","event","preventDefault","method","body","JSON","stringify"],"mappings":";;;AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BF,QAAQ,CAAC,EAAD,CAA1C;;AAEA,iBAAeG,aAAf,GAA+B;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC1DC,MAAAA,OAAO,EAAE;AACR,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADV;AADiD,KAApC,CAAvB;AAMA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACzBZ,MAAAA,QAAQ,CAACU,IAAI,CAACX,KAAN,CAAR;AACA,KAFD,MAEO;AACNc,MAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACA;AACD;;AAEDC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMC,KAAK,GAAGR,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIO,KAAJ,EAAW;AACV,YAAMC,IAAI,GAAGtB,GAAG,CAACuB,MAAJ,CAAWF,KAAX,CAAb;;AACA,UAAI,CAACC,IAAL,EAAW;AACVT,QAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACArB,QAAAA,OAAO,CAACsB,OAAR,CAAgB,QAAhB;AACA,OAHD,MAGO;AACNhB,QAAAA,aAAa;AACb;AACD;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,iBAAeiB,WAAf,CAA2BC,KAA3B,EAAkC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC1DkB,MAAAA,MAAM,EAAE,MADkD;AAE1DjB,MAAAA,OAAO,EAAE;AACR,wBAAgB,kBADR;AAER,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFV,OAFiD;AAM1DgB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACpB5B,QAAAA,KAAK,EAAEG;AADa,OAAf;AANoD,KAApC,CAAvB;AAWA,UAAMQ,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B;AACzBZ,MAAAA,QAAQ,CAACE,SAAD,CAAR;AACAC,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACA,KAHD,MAGO;AACNU,MAAAA,KAAK,CAACH,IAAI,CAACI,KAAN,CAAL;AACA;AACD;;AAED,sBACC;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CA7DD;;GAAMjB,S;UACWD,U;;;KADXC,S;AA+DN,eAAeA,SAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport jwt from 'jsonwebtoken'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Dashboard = () => {\r\n\tconst history = useHistory()\r\n\tconst [quote, setQuote] = useState('')\r\n\tconst [tempQuote, setTempQuote] = useState('')\r\n\r\n\tasync function populateQuote() {\r\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\r\n\t\t\theaders: {\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(data.quote)\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst token = localStorage.getItem('token')\r\n\t\tif (token) {\r\n\t\t\tconst user = jwt.decode(token)\r\n\t\t\tif (!user) {\r\n\t\t\t\tlocalStorage.removeItem('token')\r\n\t\t\t\thistory.replace('/login')\r\n\t\t\t} else {\r\n\t\t\t\tpopulateQuote()\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tasync function updateQuote(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst req = await fetch('http://localhost:1337/api/quote', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'x-access-token': localStorage.getItem('token'),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tquote: tempQuote,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await req.json()\r\n\t\tif (data.status === 'ok') {\r\n\t\t\tsetQuote(tempQuote)\r\n\t\t\tsetTempQuote('')\r\n\t\t} else {\r\n\t\t\talert(data.error)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>hoem</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}