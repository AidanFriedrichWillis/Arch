{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Documents\\\\aaf\\\\frontend\\\\src\\\\Books.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Books() {\n  _s();\n\n  const [userid, setUserid] = React.useState(\"\");\n  const [books, setBooks] = React.useState([]);\n  React.useEffect(() => {\n    usersss();\n  });\n\n  async function usersss() {\n    const token = localStorage.getItem('token');\n    console.log(token);\n    const newuser = jwtDecode(token);\n    console.log(newuser);\n    setUserid(newuser.id);\n  }\n\n  async function returnBooks() {\n    console.log(\"HEllo\");\n\n    if (userid) {\n      const userid = user.id;\n      const response = await fetch('http://localhost:5000/Books/all', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userid\n        })\n      });\n      const data = await response.json();\n      console.log(data);\n\n      if (data) {\n        setBooks(data);\n      } else {\n        console.log(\"no response\");\n      }\n    } else {\n      console.log(\"no user\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Books, \"uaaGtpRudqMCZgPY0rrXuuW8oXk=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["C:/Users/aidan/Documents/aaf/frontend/src/Books.js"],"names":["Routes","Route","Link","React","jwtDecode","Books","userid","setUserid","useState","books","setBooks","useEffect","usersss","token","localStorage","getItem","console","log","newuser","id","returnBooks","user","response","fetch","method","headers","body","JSON","stringify","data","json"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAkC,kBAAlC;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA3B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1B;AAEAL,EAAAA,KAAK,CAACQ,SAAN,CAAgB,MAAM;AACpBC,IAAAA,OAAO;AAGR,GAJD;;AAOD,iBAAeA,OAAf,GAAwB;AACrB,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,UAAMK,OAAO,GAAGd,SAAS,CAACS,KAAD,CAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACAX,IAAAA,SAAS,CAACW,OAAO,CAACC,EAAT,CAAT;AAID;;AAED,iBAAeC,WAAf,GAA4B;AAC1BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEE,QAAGX,MAAH,EAAU;AACR,YAAMA,MAAM,GAAGe,IAAI,CAACF,EAApB;AACF,YAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC7DC,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,OAAO,EAAC;AACN,0BAAgB;AADV,SAFqD;AAK7DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBtB,UAAAA;AADmB,SAAf;AALuD,OAAnC,CAA5B;AASA,YAAMuB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;;AACA,UAAGA,IAAH,EAAQ;AAEJnB,QAAAA,QAAQ,CAACmB,IAAD,CAAR;AACH,OAHD,MAII;AACAb,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACF,KApBC,MAqBE;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AAEF;;AAOD,sBAEE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAFF;AAQD;;GAlEQZ,K;;KAAAA,K;AAoET,eAAeA,KAAf","sourcesContent":["import {Routes, Route, Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nfunction Books() {\r\n\r\n  const [userid,setUserid] = React.useState(\"\");\r\n  const [books, setBooks] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    usersss();\r\n\r\n\r\n  },);\r\n\r\n  \r\n async function usersss(){\r\n    const token = localStorage.getItem('token')\r\n    console.log(token)\r\n    const newuser = jwtDecode(token);\r\n    console.log(newuser);\r\n    setUserid(newuser.id);\r\n\r\n\r\n\r\n  }\r\n  \r\n  async function returnBooks(){\r\n    console.log(\"HEllo\")\r\n\r\n      if(userid){\r\n        const userid = user.id\r\n      const response = await fetch('http://localhost:5000/Books/all',{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userid\r\n        }),\r\n      })\r\n      const data = await response.json()\r\n      console.log(data)\r\n      if(data){\r\n          \r\n          setBooks(data);\r\n      }\r\n      else{\r\n          console.log(\"no response\")\r\n      }\r\n    }\r\n    else{\r\n      console.log(\"no user\")\r\n    }\r\n  \r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"row\">\r\n\r\n  </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}