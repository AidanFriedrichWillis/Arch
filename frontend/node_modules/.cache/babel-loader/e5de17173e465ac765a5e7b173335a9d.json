{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aidan\\\\Documents\\\\aaf\\\\frontend\\\\src\\\\Books.js\",\n    _s = $RefreshSig$();\n\nimport { Routes, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport jwtDecode from 'jwt-decode';\nimport * as ReactBootStrap from \"react-bootstrap\";\nimport Bookcomp from 'Bookcomp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Books() {\n  _s();\n\n  const [userid, setUserid] = React.useState(\"\");\n  const [bookslist, setBooks] = React.useState([]);\n  const [isClient, setClient] = React.useState(false);\n  const [isEmp, setEmp] = React.useState(false);\n  const [isAdmin, setAdmin] = React.useState(false);\n  React.useEffect(() => {\n    userss();\n\n    if (userid) {\n      returnBookss();\n    }\n  }, [userid]);\n\n  async function userss() {\n    const token = localStorage.getItem('token');\n    const newuser = jwtDecode(token);\n    console.log(newuser);\n    setUserid(newuser.id);\n    console.log(userid);\n  }\n\n  async function returnBookss() {\n    console.log(\"HEllo\");\n    const response = await fetch('http://localhost:5000/Books/all', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userid\n      })\n    });\n    const data = await response.json();\n\n    if (data) {\n      await setBooks(data);\n      console.log(data);\n    } else {\n      console.log(\"no response\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [is, /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), bookslist.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Bookcomp, {\n          book: book\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"yo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Books, \"qe0+5wv65c3oPEAu2Gu9Y11Rysk=\");\n\n_c = Books;\nexport default Books;\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["C:/Users/aidan/Documents/aaf/frontend/src/Books.js"],"names":["Routes","Route","Link","React","jwtDecode","ReactBootStrap","Bookcomp","Books","userid","setUserid","useState","bookslist","setBooks","isClient","setClient","isEmp","setEmp","isAdmin","setAdmin","useEffect","userss","returnBookss","token","localStorage","getItem","newuser","console","log","id","response","fetch","method","headers","body","JSON","stringify","data","json","is","map","book"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,KAAhB,EAAuBC,IAAvB,QAAkC,kBAAlC;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AAEf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBN,KAAK,CAACO,QAAN,CAAe,EAAf,CAA3B;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBT,KAAK,CAACO,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACG,QAAD,EAAWC,SAAX,IAAwBX,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,MAAR,IAAkBb,KAAK,CAACO,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACO,OAAD,EAAUC,QAAV,IAAsBf,KAAK,CAACO,QAAN,CAAe,KAAf,CAA5B;AAIAP,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,MAAM;;AACN,QAAGZ,MAAH,EAAU;AACRa,MAAAA,YAAY;AACb;AACF,GALD,EAKE,CAACb,MAAD,CALF;;AAQD,iBAAeY,MAAf,GAAuB;AACpB,UAAME,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAGrB,SAAS,CAACkB,KAAD,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAhB,IAAAA,SAAS,CAACgB,OAAO,CAACG,EAAT,CAAT;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AAGD;;AAED,iBAAea,YAAf,GAA6B;AAC3BK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AAGE,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAmC;AAC7DC,MAAAA,MAAM,EAAE,MADqD;AAE7DC,MAAAA,OAAO,EAAC;AACN,wBAAgB;AADV,OAFqD;AAK7DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB3B,QAAAA;AADmB,OAAf;AALuD,KAAnC,CAA5B;AASA,UAAM4B,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;;AACA,QAAGD,IAAH,EAAQ;AAEJ,YAAMxB,QAAQ,CAACwB,IAAD,CAAd;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AACH,KAJD,MAKI;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AAGJ;;AAOD,sBAEE;AAAA,eAEKW,EAFL,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,EAMK3B,SAAS,CAAC4B,GAAV,CAAeC,IAAD,IAAU;AAEvB,0BACA;AAAA,gCACA,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADA,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA;AAMD,KARA,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAsBD;;GAjFQjC,K;;KAAAA,K;AAmFT,eAAeA,KAAf","sourcesContent":["import {Routes, Route, Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from \"react\";\r\nimport jwtDecode from 'jwt-decode';\r\nimport * as ReactBootStrap from \"react-bootstrap\"\r\nimport Bookcomp from 'Bookcomp';\r\n\r\nfunction Books() {\r\n\r\n  const [userid,setUserid] = React.useState(\"\");\r\n  const [bookslist, setBooks] = React.useState([]);\r\n  const [isClient, setClient] = React.useState(false);\r\n  const [isEmp, setEmp] = React.useState(false);\r\n  const [isAdmin, setAdmin] = React.useState(false);\r\n\r\n\r\n\r\n  React.useEffect(() => {\r\n    userss();\r\n    if(userid){\r\n      returnBookss();\r\n    }\r\n  },[userid]);\r\n\r\n  \r\n async function userss(){\r\n    const token = localStorage.getItem('token')\r\n    const newuser = jwtDecode(token);\r\n    console.log(newuser);\r\n    setUserid(newuser.id);\r\n    console.log(userid);\r\n\r\n\r\n  }\r\n  \r\n  async function returnBookss(){\r\n    console.log(\"HEllo\")\r\n\r\n      \r\n      const response = await fetch('http://localhost:5000/Books/all',{\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userid\r\n        }),\r\n      })\r\n      const data = await response.json()\r\n      if(data){\r\n          \r\n          await setBooks(data);\r\n          console.log(data)\r\n      }\r\n      else{\r\n          console.log(\"no response\")\r\n      }\r\n  \r\n    \r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    \r\n    <div>\r\n\r\n        {is}\r\n\r\n\r\n        <h1></h1>\r\n        {bookslist.map((book) => {\r\n\r\n          return( \r\n          <div>\r\n          <Bookcomp book={book}></Bookcomp>\r\n                  <button >yo</button>\r\n            </div>\r\n          )\r\n        })}\r\n\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Books;\r\n"]},"metadata":{},"sourceType":"module"}